<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.sp" />
	
	<!-- 권한이 없는 페이지를 접근할 경우 접근 불가 메시지 출력 -->
	<http auto-config="true">
		<!-- spring 4.x때 추가된 옵션으로 ssl을 사용하지 않을 경우 csrf는 disalbed=true로 설정. -->
		<csrf disabled="true" />
		
		<!-- 모든 유저 접근 -->
		<intercept-url pattern="/index.jsp" access="permitAll" />
		<intercept-url pattern="/main" access="permitAll" />
		<intercept-url pattern="/member/login" access="permitAll" />
		<intercept-url pattern="/member/member" access="permitAll" />
		<intercept-url pattern="/member/userIdCheck" access="permitAll" />
		<intercept-url pattern="/member/complete" access="permitAll" />

		<intercept-url pattern="/resource/**" access="permitAll" />
		
		<!-- 관리자 페이지 -->
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />

		<!-- 기타 페이지 -->
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

		<form-login
			login-page="/member/login"
			login-processing-url="/member/login_check"
			username-parameter="userId"
			password-parameter="userPwd"
			authentication-failure-url="/member/login?login_error"
			default-target-url="/"
			always-use-default-target="false"
			authentication-success-handler-ref="authenticationSuccessHandler" />

		<logout logout-url="/member/logout" invalidate-session="true" logout-success-url="/" />

		<!-- 접근 권한이 없는 경우 -->
		<access-denied-handler error-page="/member/noAuthorized" />

		<!-- 동일 아이디 한명만 접근 -->
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/member/expired" />
		</session-management>
	</http>

	<beans:bean id="authenticationSuccessHandler" class="com.sp.member.MyAuthenticationSuccessHandler" />
		
	<jdbc-user-service data-source-ref="dataSource"
		id="jdbcUserService"
		users-by-username-query="SELECT userId AS userName, userPwd AS password, enabled FROM member WHERE userId = ?"
		authorities-by-username-query="SELECT userId AS userName, authority FROM memberAuthority WHERE userId = ?"/>

	<authentication-manager>
		<authentication-provider user-service-ref="jdbcUserService">
			<password-encoder ref="bcryptencoder"/>
		</authentication-provider>
	</authentication-manager>

	<!-- 패스워드 암호화에 특화된 password hashing function -->
	<beans:bean id="bcryptencoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	
	</beans:bean>
</beans:beans>
